y <- y[which(x<0)]
x <- c[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels=FALSE, hang=hang, ...)
test(x=x, y=y[hclust$order]-(max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA, ...))
}
elcluster <- function(hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1, ...){
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- c[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels=FALSE, hang=hang, ...)
test(x=x, y=y[hclust$order]-(max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA, ...))
}
elcluster <- function(hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1, ...){
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- c[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels=FALSE, hang=hang, ...)
test(x=x, y=y[hclust$order]-(max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA, ...)
}
elcluster(distancia, lab = rep(1:2, each=c(5,4), lab.col=each=c(5,4)))
elcluster(distancia, lab = rep(1:2, each=c(5,4)), lab.col=rep(1:2, each=c(5,4)))
elcluster(distancia)
distancia <- dist(zoom[,8])
elcluster(cluster)
cluster <- hclust(distancia)
elcluster(cluster)
plot(cluster)
elcluster(cluster, lab = rep(1:2, each=c(5,4)), lab.col=rep(1:2, each=c(5,4)))
cluster <- hclust(distancia)
distancia <- dist(zoom[,8])
cluster <- hclust(distancia)
elcluster(cluster, lab = rep(1:2, each=c(5,4)), lab.col=rep(1:2, each=c(5,4)))
clustert <- hclust(distance)
elcluster(clustert, lab = rep(1:2, each=c(5,4)), lab.col=rep(1:2, each=c(5,4)))
elcluster(cluster, lab = rep(1:2, each=c(5,4)), lab.col=rep(1:2, each=c(5,4)))
elcluster <- function(hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1, ...){
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- c[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels=FALSE, hang=hang, ...)
test(x=x, y=y[hclust$order]-(max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA, ...)
}
plot(cluster)
elcluster(cluster, lab = rep(1:2, each=c(5,4)), lab.col=rep(1:2, each=c(5,4)))
cluster <- hclust(distancia)
#zoom de dimensiones
distancia <- dist(t(zoom[6:12,]))
t(zoom[6:12,]
)
#zoom de dimensiones
distancia <- dist(t(zoom))
zoom
t(zoom)
#zoom
distancia <- dist(t(datos[5]))
cluster <- hclust(distancia)
plot(cluster)
t(datos[5]
t(datos[5]
t(datos[5])
#zoom
distancia <- dist(t(datos[6:12]))
cluster <- hclust(distancia)
plot(cluster)
#zoom
distancia <- dist(zoom[,8])
cluster <- hclust(distancia)
plot(cluster)
#zoom de dimensiones
distancia <- dist(t(zoom[6:12]))
cluster <- hclust(distancia)
plot(cluster)
#PRESENCIAL
distancia <- dist(t(presencial[6:12]))
cluster <- hclust(distancia)
plot(cluster)
dist(zoom[,8])
#PRESENCIAL
#memoria
distancia <- dist(presencial[,8])
cluster <- hclust(distancia)
plot(cluster)
presencial
plot(cluster, main = "presencial")
plot(cluster, main = "presencial", xlab = "")
mtext("")
mtext("i")
plot(cluster, main = "presencial/memoria", xlab = "")
par(mar=c(2,2,2,2))
plot(cluster, main = "presencial/memoria", xlab = "")
par(mar=c(4,2,2,2))
plot(cluster, main = "presencial/memoria", xlab = "")
par(mar=c(2,2,2,4))
plot(cluster, main = "presencial/memoria", xlab = "")
par(mar=c(2,2,4,2))
plot(cluster, main = "presencial/memoria", xlab = "")
par(mar=c(2,4,4,2))
plot(cluster, main = "presencial/memoria", xlab = "")
par(mar=c(2,4,4,2), mfrow=c(2,2))
#zoom
distancia <- dist(zoom[,8])
cluster <- hclust(distancia)
plot(cluster, main = "Zoom/memoria")
#zoom de dimensiones
distancia <- dist(t(zoom[6:12]))
cluster <- hclust(distancia)
plot(cluster, main="Zoom/dimensiones")
plot(cluster, main = "presencial/memoria")
#PRESENCIAL
#memoria
distancia <- dist(presencial[,8])
cluster <- hclust(distancia)
plot(cluster, main = "presencial/memoria")
cluster <- hclust(distancia, main= "presencial/dimensiones")
par(mar=c(2,4,4,2), mfrow=c(2,2))
#zoom
distancia <- dist(zoom[,8])
cluster <- hclust(distancia)
plot(cluster, main = "Zoom/memoria")
#zoom de dimensiones
distancia <- dist(t(zoom[6:12]))
cluster <- hclust(distancia)
plot(cluster, main="Zoom/dimensiones")
#PRESENCIAL
#memoria
distancia <- dist(presencial[,8])
cluster <- hclust(distancia)
plot(cluster, main = "presencial/memoria")
#dimensiones
distancia <- dist(t(presencial[6:12]))
cluster <- hclust(distancia, main= "presencial/dimensiones")
plot(cluster, main = "presencial/memoria", xlab = "")
par(mar=c(2,4,4,2), mfrow=c(2,2))
#zoom
distancia <- dist(zoom[,8])
cluster <- hclust(distancia)
plot(cluster, main = "Zoom/memoria")
#zoom de dimensiones
distancia <- dist(t(zoom[6:12]))
cluster <- hclust(distancia)
plot(cluster, main="Zoom/dimensiones")
#PRESENCIAL
#memoria
distancia <- dist(presencial[,8])
cluster <- hclust(distancia)
plot(cluster, main = "presencial/memoria")
#dimensiones
distancia <- dist(t(presencial[6:12]))
cluster <- hclust(distancia)
plot(cluster, main =  main= "presencial/dimensiones", xlab = "")
elcluster <- function(hclust, lab=hclust$labels, lab.col=rep(1,length(hclust$labels)), hang=0.1, ...){
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- c[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels=FALSE, hang=hang, ...)
test(x=x, y=y[hclust$order]-(max(hclust$height)*hang), labels=lab[hclust$order], col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA, ...)
}
#dimensiones
distancia <- dist(t(presencial[6:12]))
cluster <- hclust(distancia)
plot(cluster, main =  main= "presencial/dimensiones", xlab = "")
plot(cluster, main= "presencial/dimensiones", xlab = "")
png("clusters.png")
par(mar=c(2,4,4,2), mfrow=c(2,2))
#zoom
distancia <- dist(zoom[,8])
cluster <- hclust(distancia)
plot(cluster, main = "Zoom/memoria")
#zoom de dimensiones
distancia <- dist(t(zoom[6:12]))
cluster <- hclust(distancia)
plot(cluster, main="Zoom/dimensiones")
#PRESENCIAL
#memoria
distancia <- dist(presencial[,8])
cluster <- hclust(distancia)
plot(cluster, main = "presencial/memoria")
#dimensiones
distancia <- dist(t(presencial[6:12]))
cluster <- hclust(distancia)
plot(cluster, main= "presencial/dimensiones", xlab = "")
dev.off()
#dimensiones
distancia <- dist(t(presencial[6:12]))
cluster <- hclust(distancia)
plot(cluster, main= "presencial/dimensiones", xlab = "")
library(xlsx)
datos <- read.xlsx("CAMDEX-TESIS.xlsx", header = TRUE, sheetIndex = 1)
datos <- na.omit(datos)
zoom <- datos[datos$GRUPO. == "Zoom",]
presencial <- datos[datos$GRUPO.=="Presencial",]
##ZOOM
t.test(zoom[zoom$EDAD=="JÃ³venes", "MEMORIA"],
zoom[zoom$EDAD== "Adultos", "MEMORIA"])
##ZOOM
t.test(zoom[zoom$EDAD=="JÃ³venes", 6],
zoom[zoom$EDAD== "Adultos", 6])
##ZOOM
t.test(zoom[zoom$EDAD== "Adultos", 6],
zoom[zoom$EDAD=="JÃ³venes", 6])
pvaluesP[i] <- t.test(presencial[presencial$EDAD=="JÃ³venes", i],
presencial[presencial$EDAD== "Adultos", 6])$p.value
pvaluesP <- numeric(6)
for (i in c(6,7,8,11,12)) {
pvaluesP[i] <- t.test(presencial[presencial$EDAD=="JÃ³venes", i],
presencial[presencial$EDAD== "Adultos", 6])$p.value
}
pvaluesP
pvaluesP <- na.omit(pvaluesP)
presencial[presencial$EDAD=="JÃ³venes", 11]
presencial[presencial$EDAD== "Adultos", 11]
pvaluesP <- c(pvaluesP, t.test(presencial[presencial$EDAD=="JÃ³venes", ],
presencial[presencial$EDAD== "Adultos", 6])$p.value)
for (i in c(6,7,8,11,12)) {
pvaluesP <- numeric(6)
pvaluesP <- c(pvaluesP, t.test(presencial[presencial$EDAD=="JÃ³venes", ],
presencial[presencial$EDAD== "Adultos", 6])$p.value)
}
pvaluesP <- c(pvaluesP, t.test(presencial[presencial$EDAD=="JÃ³venes", i],
presencial[presencial$EDAD== "Adultos", i])$p.value)
for (i in c(6,7,8,11,12)) {
pvaluesP <- numeric(6)
pvaluesP <- c(pvaluesP, t.test(presencial[presencial$EDAD=="JÃ³venes", i],
presencial[presencial$EDAD== "Adultos", i])$p.value)
}
pvaluesP
pvaluesZ <- function(x){
y <- numeric()
for (i in c(6,7, 8, 10, 11, 12)) {
jovenes <-  x[x$EDAD=="JÃ³venes", i]
adultos <- x[x$EDAD== "Adultos", i]
y <- c(y, t.test(jovenes, adultos)$p.value)
}
y
}
pvaluesZ(zoom)
##ZOOM
t.test(zoom[zoom$EDAD== "Adultos", 6],
zoom[zoom$EDAD=="JÃ³venes", 6])$t.value
##ZOOM
t.test(zoom[zoom$EDAD== "Adultos", 6],
zoom[zoom$EDAD=="JÃ³venes", 6])
##ZOOM
t.test(zoom[zoom$EDAD== "Adultos", 6],
zoom[zoom$EDAD=="JÃ³venes", 6])$t
##ZOOM
t.test(zoom[zoom$EDAD== "Adultos", 6],
zoom[zoom$EDAD=="JÃ³venes", 6])$t.val
##ZOOM
t.test(zoom[zoom$EDAD== "Adultos", 6],
zoom[zoom$EDAD=="JÃ³venes", 6])$t.value
##ZOOM
t <- t.test(zoom[zoom$EDAD== "Adultos", 6],
zoom[zoom$EDAD=="JÃ³venes", 6])
t$statistic
##ZOOM
.test(zoom[zoom$EDAD== "Adultos", 6],
zoom[zoom$EDAD=="JÃ³venes", 6])$statistic
##ZOOM
t.test(zoom[zoom$EDAD== "Adultos", 6],
zoom[zoom$EDAD=="JÃ³venes", 6])$statistic
pvaluesZ <- function(x){
y <- numeric()
for (i in c(6,7, 8, 10, 11, 12)) {
jovenes <-  x[x$EDAD=="JÃ³venes", i]
adultos <- x[x$EDAD== "Adultos", i]
y <- c(y, t.test(jovenes, adultos)$statistic)
}
y
}
tvaluesZ <- function(x){
y <- numeric()
for (i in c(6,7, 8, 10, 11, 12)) {
jovenes <-  x[x$EDAD=="JÃ³venes", i]
adultos <- x[x$EDAD== "Adultos", i]
y <- c(y, t.test(jovenes, adultos)$statistic)
}
y
}
pvaluesZ <- function(x){
y <- numeric()
for (i in c(6,7, 8, 10, 11, 12)) {
jovenes <-  x[x$EDAD=="JÃ³venes", i]
adultos <- x[x$EDAD== "Adultos", i]
y <- c(y, t.test(jovenes, adultos)$statistic)
}
y
}
pvaluesZ(zoom)
tvaluesZ(zoom)
pvaluesZ <- function(x){
y <- numeric()
for (i in c(6,7, 8, 10, 11, 12)) {
jovenes <-  x[x$EDAD=="JÃ³venes", i]
adultos <- x[x$EDAD== "Adultos", i]
y <- c(y, t.test(jovenes, adultos)$p.value)
}
y
}
pvaluesZ(zoom)
tvaluesZ(zoom)
split(zoom, EDAD)
split(zoom, zoom$EDAD)
split(zoom, zoom$EDAD)
grupoZ <- split(zoom, zoom$EDAD)
apply(grupoZ, 2, mean)
lapply(grupoZ, function(x)colMeans(c(6:12)))
lapply(grupoZ, function(x)colMeans(x[,6:12]))
#sd
lapply(grupoZ, function(x)sd(x[,6:12]))
#sd
lapply(grupoZ, function(x)sd(x[,6:12]))
#sd
lapply(grupoZ, function(x)mean(x[,6:12]))
sd(zoom[,5:12])
#sd
colsd <- function(x, cols=a:n){
sds <- numeric()
for (i in a:n) {
sds <- c(sds, sd(x[,i]))
}
sds
}
colsd(zoom, 5:12)
#sd
colsd <- function(x, cols = a:n){
sds <- numeric()
for (i in cols) {
sds <- c(sds, sd(x[,i]))
}
sds
}
colsd(zoom, 5:12)
lapply(grupoZ, function(x)colsd(x, 5:12))
View(t)
library(xlsx)
datos <- read.xlsx("CAMDEX-TESIS.xlsx", header = TRUE, sheetIndex = 1)
datos <- na.omit(datos)
zoom <- datos[datos$GRUPO. == "Zoom",]
presencial <- datos[datos$GRUPO.=="Presencial",]
#medias
grupoZ <- split(zoom, zoom$EDAD)
lapply(grupoZ, function(x)colMeans(x[,6:12]))
#sd
colsd <- function(x, cols = a:n){
sds <- numeric()
for (i in cols) {
sds <- c(sds, sd(x[,i]))
}
sds
}
lapply(grupoZ, function(x)colsd(x, 5:12))
#sd
colsd <- function(x, cols=a:b){
for (i in cols) {
sd <- apply(x[i], 2, sd)
}
sd
}
colsd(grupoZ, 1:2)
apply(grupoZ[1], 2, sd)
grupoZ[1]
apply(grupoZ[1][6:12], 2, sd)
grupoZ[1][6:12]
apply(grupoZ$Adultos[6:12], 2, sd)
grupoZ[[1]][6:12]
#sd
colsd <- function(x, cols=a:b){
for (i in cols) {
sd <- apply(x[[i]][a:b], 2, sd)
}
sd
}
apply(grupoZ[[1]][6:12], 2, sd)
colsd(grupoZ, 1:2)
#sd
colsd <- function(x, cols=a:b){
for (i in cols) {
sd <- apply(x[[i]][cols], 2, sd)
}
sd
}
colsd(grupoZ, 6:12)
#sd
colsd <- function(x, cols=a:b){
for (i in cols) {
sd <- apply(x[[i]][5:12], 2, sd)
}
sd
}
colsd(grupoZ, 1:2)
grupoZ[1][6:12]
grupoZ[1]
grupoZ[1][[6:12]]
grupoZ[1][1]
grupoZ[1][,6]
grupoZ[1][,6:12]
grupoZ[1][6:12]
#sd
lapply(grupoZ, function(x)colsd(x, 5:12))
#sd
apply(grupoZ$Adultos[5:12], 2, sd)
apply(grupoZ$Jovenes[5:12], 2, sd)
#sd
apply(grupoZ$Adultos[,5:12], 2, sd)
apply(grupoZ$Jovenes[,5:12], 2, sd)
apply(grupoZ$JÃ³venes[,5:12], 2, sd)
colsd <- function(x,y){
data1 <- apply(x, 2, sd)
data2 <- apply(y, 2, sd)
data <- list(data1, data2)
}
colsd(grupoZ$Adultos, grupoZ$JÃ³venes)
colsd(grupoZ$Adultos[5:12], grupoZ$JÃ³venes[5:12])
colsd(grupoZ$Adultos[5:12], grupoZ$JÃ³venes[5:12])
colsd <- function(x,y){
data1 <- apply(x, 2, sd)
data2 <- apply(y, 2, sd)
data <- list(data1, data2)
data
}
colsd(grupoZ$Adultos[5:12], grupoZ$JÃ³venes[5:12])
names(grupoZ)
names(grupoZ$Adultos)
names(grupoZ[1])
colsd <- function(x,y){
data1 <- apply(x, 2, sd)
data2 <- apply(y, 2, sd)
data <- list(names(x[1])= data1, names(x[2])= data2)
data
}
colsd(grupoZ$Adultos[5:12], grupoZ$JÃ³venes[5:12])
colsd <- function(x,y, frame){
data1 <- apply(x, 2, sd)
data2 <- apply(y, 2, sd)
data <- list(names(frame[1])= data1, names(frame[2])= data2)
data
}
colsd(grupoZ$Adultos[5:12], grupoZ$JÃ³venes[5:12], frame = grupoZ)
colsd <- function(x,y, frame){
data1 <- apply(x, 2, sd)
data2 <- apply(y, 2, sd)
data <- list(names(frame[1])= data1, names(frame[2])= data2)
data
}
colsd <- function(x,y, frame){
data1 <- apply(x, 2, sd)
data2 <- apply(y, 2, sd)
data <- list(names(frame[1])= data1, names(frame[2])= data2)
data
}
colsd <- function(x,y, frame){
data1 <- apply(x, 2, sd)
data2 <- apply(y, 2, sd)
data <- list(names(frame[1])= data1, names(frame[2])= data2)
data
}
colsd <- function(x,y, frame){
data1 <- apply(x, 2, sd)
data2 <- apply(y, 2, sd)
data <- list(names(frame[1])= data1, names(frame[2])= data2)
data
}
colsd <- function(x,y, frame){
data1 <- apply(x, 2, sd)
data2 <- apply(y, 2, sd)
data <- list(names(frame[1])= data1, names(frame[2])= data2)
data
}
colsd(grupoZ$Adultos[5:12], grupoZ$JÃ³venes[5:12], frame = grupoZ)
apply(grupoZ$Adultos[,5:12], 2, sd)
apply(grupoZ$JÃ³venes[,5:12], 2, sd)
plot(xtabs(hospitalizados_totales_cdmx~meses, data = hospitalizados), ylab = "No. hospitalizados CDMX", type = "l")
##hospitalizados link 2
URL <- "https://datos.cdmx.gob.mx/dataset/b0d4230e-f37b-463e-8c16-3565aa78cbfc/resource/8b29f1ab-6245-42f1-878b-78e9a4b02374/download/personas_hospitalizadas_con_diagnostico_covid19-series_totales.csv"
download.file(URL, destfile = "./data/covid19CDMXhospitalizados.csv")
hospitalizados <- read.csv("./data/covid19CDMXhospitalizados.csv")
hospitalizados <- hospitalizados[hospitalizados$aÃ.o==2020,]
##hospitalizados link 2
URL <- "https://datos.cdmx.gob.mx/dataset/b0d4230e-f37b-463e-8c16-3565aa78cbfc/resource/8b29f1ab-6245-42f1-878b-78e9a4b02374/download/personas_hospitalizadas_con_diagnostico_covid19-series_totales.csv"
download.file(URL, destfile = "./data/covid19CDMXhospitalizados.csv")
hospitalizados <- read.csv("./data/covid19CDMXhospitalizados.csv")
plot(xtabs(hospitalizados_totales_cdmx~meses, data = hospitalizados), ylab = "No. hospitalizados CDMX", type = "l")
plot(xtabs(hospitalizados_totales_cdmx, data = hospitalizados), ylab = "No. hospitalizados CDMX", type = "l")
plot(hospitalizados$hospitalizados_totales_cdmx)
plot(hospitalizados$hospitalizados_totales_cdmx, type = "l")
hospitalizados$mes
##hospitalizados link 2
URL <- "https://datos.cdmx.gob.mx/dataset/b0d4230e-f37b-463e-8c16-3565aa78cbfc/resource/8b29f1ab-6245-42f1-878b-78e9a4b02374/download/personas_hospitalizadas_con_diagnostico_covid19-series_totales.csv"
download.file(URL, destfile = "./data/covid19CDMXhospitalizados.csv")
hospitalizados <- read.csv("./data/covid19CDMXhospitalizados.csv")
plot(hospitalizados$hospitalizados_totales_cdmx)
plot(hospitalizados$hospitalizados_totales_cdmx, type = "l")
